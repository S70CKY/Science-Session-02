import plotly.graph_objects as go

# Nodes
nodes = [
    "VAP", "HLOS", "ICULOS", "STM", "MVD",
    "CILL", "Trauma", "TraumaNN", "SCI", "TBI", "Stroke", "C19",
    "ET", "LT", "ND"
]

# create Links (1 Node, 2 Node, Value (weight))
links = [
    ("VAP", "CILL", 4),
    ("VAP", "Trauma", 1),
    ("VAP", "TraumaNN", 1),
    ("VAP", "SCI", 1),
    ("VAP", "TBI", 1),
    ("VAP", "Stroke", 1),
    ("VAP", "C19", 2),

    ("HLOS", "CILL", 1),
    ("HLOS", "TraumaNN", 1),
    ("HLOS", "SCI", 1),
    ("HLOS", "TBI", 1),
    ("HLOS", "Stroke", 1),
    ("HLOS", "C19", 1),

    ("ICULOS", "CILL", 4),
    ("ICULOS", "Trauma", 1),
    ("ICULOS", "TraumaNN", 1),
    ("ICULOS", "SCI", 1),
    ("ICULOS", "TBI", 1),
    ("ICULOS", "Stroke", 1),
    ("ICULOS", "C19", 2),
    
    ("STM", "CILL", 5),
    ("STM", "SCI", 1),
    ("STM", "C19", 2),
    
    ("MVD", "CILL", 4),
    ("MVD", "Trauma", 1),
    ("MVD", "TraumaNN", 1),
    ("MVD", "SCI", 1),
    ("MVD", "TBI", 1),
    ("MVD", "Stroke", 1),
    ("MVD", "C19", 3),
    
    # Population -> Günstiger Outcomes
    ("CILL", "ET", 10),
    ("CILL", "ND", 8),
    ("Trauma", "ET", 3),
    ("TraumaNN", "ND", 4),
    ("SCI", "ET", 4),
    ("SCI", "ND", 1),
    ("TBI", "ET", 4),
    ("Stroke", "ET", 4),
    ("C19", "ET", 1),
    ("C19", "ND", 9),
]

# Nodes zu indices zuordnen
node_dict = {node: idx for idx, node in enumerate(nodes)}

# define colors and opacity -> 40%
node_colors = {
    "VAP": "rgba(0, 194, 249, 0.4)",  
    "HLOS": "rgba(0, 149, 3, 0.4)",      
    "ICULOS": "rgba(0, 145, 117, 0.4)",
    "STM": "rgba(120, 0, 75, 0.4)", 
    "MVD": "rgba(90, 0, 15, 0.4)",   
    "CILL": "rgba(205, 2, 45, 0.4)",  
    "Trauma": "rgba(255, 172, 59, 0.4)",  
    "TraumaNN": "rgba(255, 99, 132, 0.4)",  
    "Stroke": "rgba(132, 0, 205, 0.4)",  
    "TBI": "rgba(15, 132, 152, 0.4)",  
    "C19": "rgba(45, 162, 172, 0.4)",  
    "SCI": "rgba(75, 122, 182, 0.4)",  
    "ET": "rgba(75, 192, 195, 0.4)",  
    "LT": "rgba(25, 182, 127, 0.4)", 
    "ND": "rgba(15, 192, 198, 0.4)"  
}

# Data arrays für Sankey
source = []
target = []
value = []
link_colors = []

# create Arrays for the links
for link in links:
    source.append(node_dict[link[0]])  # index of source node
    target.append(node_dict[link[1]])  # index of target node
    value.append(link[2])  # value 
    link_colors.append(node_colors[link[0]])  # link color to match node color

# Assign colors to nodes with opacity
node_borders = [node_colors[node] for node in nodes]

# Create the Sankey diagram
fig = go.Figure(go.Sankey(
    arrangement="snap", 
    node=dict(
        pad=20,                # spacing between nodes
        thickness=30,          # thickness of nodes 
        line=dict(color=node_borders, width=4),  # border colors
        color=[node_colors[node] for node in nodes],  # Node fill colors
        label=nodes,           # Show node labels
    ),
    link=dict(
        source=source,
        target=target,
        value=value,
        color=link_colors,
        hovertemplate=" ",     # No hover info
    )
))

# Adjust the layout
fig.update_layout(
    autosize=False,
    width=2970,   # A4 landscape
    height=2100,
    margin=dict(l=100, r=100, t=100, b=100),
    font=dict(size=28)  # Large font for clarity
)

fig.show()

# Optional: Print legend mapping node indices to names
print("\nNode Index → Node Name Mapping:\n")
for idx, name in enumerate(nodes):
    print(f"{idx}: {name}")
