# -*- coding: utf-8 -*-
"""sankey_trach.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YUjMcKGmC_dRvnjmyZ0fvRd2Q5meGZvK
"""

import plotly.graph_objects as go

# Node order: left → middle → right
nodes = [
    "CILL", "Trauma", "TraumaNN", "SCI", "TBI", "Stroke", "C19",  # Left column
    "ET", "LT", "ND",                                             # Middle column
    "VAP", "HLOS", "ICULOS", "STM", "MVD"                         # Right column
]

colors = {
    "CILL": "#1b9e77",      # green
    "Trauma": "#d95f02",    # orange
    "TraumaNN": "#7570b3",  # purple
    "SCI": "#e7298a",       # pink
    "TBI": "#66a61e",       # olive green
    "Stroke": "#e6ab02",    # mustard
    "C19": "#a6761d"        # brown
}

# Sample links: LEFT ➡️ MIDDLE
left_to_middle = [
    ("CILL", "ET", 10),
    ("CILL", "ND", 8),
    ("Trauma", "ET", 3),
    ("TraumaNN", "ND", 4),
    ("SCI", "ET", 4),
    ("SCI", "ND", 1),
    ("TBI", "ET", 4),
    ("Stroke", "ET", 4),
    ("C19", "ET", 1),
    ("C19", "ND", 9),
]

# Sample links: MIDDLE ➡️ RIGHT
middle_to_right = [
    ("ET", "VAP", 6),
    ("LT", "VAP", 0),
    ("ND", "VAP", 5),

    ("ET", "MVD", 7),
    ("LT", "MVD", 0),
    ("ND", "MVD", 5),

    ("ET", "STM", 2),
    ("LT", "STM", 0),
    ("ND", "STM", 6),

    ("ET", "ICULOS", 8),
    ("LT", "ICULOS", 0),
    ("ND", "ICULOS", 3),

    ("ET", "HLOS", 3),
    ("LT", "HLOS", 0),
    ("ND", "HLOS", 3),
]

# Combine all links
all_links = left_to_middle + middle_to_right

# Convert to index-based format
source = [nodes.index(src) for src, tgt, val in all_links]
target = [nodes.index(tgt) for src, tgt, val in all_links]
value  = [val for src, tgt, val in all_links]

# Assign colors to links: use diagnosis source where possible
link_colors = []
for src, tgt, val in all_links:
    if src in colors:
        link_colors.append(colors[src])  # Left to middle: diagnosis-based color
    else:
        # Use color of the incoming node if middle to right
        # You can trace which diagnosis fed into "ET", "LT", etc.
        if src == "ET":
            link_colors.append(colors["CILL"])  # or mixed/matched as needed
        elif src == "LT":
            link_colors.append(colors["Trauma"])
        elif src == "ND":
            link_colors.append(colors["TraumaNN"])
        else:
            link_colors.append("gray")

# Build Sankey plot
fig = go.Figure(data=[go.Sankey(
    arrangement="snap",  # helps maintain order
    node=dict(
        pad=20,
        thickness=20,
        line=dict(color="black", width=0.5),
        label=nodes,
        color="lightgray"
    ),
    link=dict(
        source=source,
        target=target,
        value=value,
        color="rgba(100,100,200,0.4)"
    )
)])

fig.show()